CreateFeeController.createFee.notes=Create one or more new fees using a list of JSON objects. The IDs are created automatically.

DeleteFeeController.deleteFee.notes=Delete a specific fee with a given ID.

ReadFeeController.getAllFees.notes=Returns all saved fees.
ReadFeeController.getFeeById.notes=Returns a specific fee, based on the given ID.
ReadFeeController.findAllByMemberId.notes=Returns all fees that are associated with the given member ID.
ReadFeeController.findByDate.notes=Returns all fees that were created on the given date. The date-string has to be of the ISO 8601 format (yyyy-mm-dd).
ReadFeeController.findByDateRange.notes=Returns all fees that were created in the given range. Use the parameters 'from' and (optionally) 'until' to define a range. The date-string has to be of the ISO 8601 format (yyyy-mm-dd).
ReadFeeController.findByStatus.notes=Returns all fees with a specific status.
ReadFeeController.findByAmount.notes=Returns all fees with a specific amount.

ChangeFeeController.replaceFee.notes=Replace a fee with a custom Request body. This completely replaces the fee with everything except the id.
ChangeFeeController.changeFee.notes=Change a fee with query paramters. One, all or any amount of attributes can be changed.

CalculateFeeController.calculateFees.notes=Calculate fees for all members based on teams and date of entry, but do not persist these to the database.
CalculateFeeController.calculateFeesThisYear.notes=Calculate fees for all members based on teams and date of entry for the current year, but do not persist these to the database.
CalculateFeeController.calculateFeesAndSave.notes=Calculate fees for all members based on teams and date of entry, and DO persist these to the database.